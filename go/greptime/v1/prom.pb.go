// Copyright 2023 Greptime Team
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: greptime/v1/prom.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PromqlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are assignable to Promql:
	//
	//	*PromqlRequest_InstantQuery
	//	*PromqlRequest_RangeQuery
	Promql isPromqlRequest_Promql `protobuf_oneof:"promql"`
}

func (x *PromqlRequest) Reset() {
	*x = PromqlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_greptime_v1_prom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromqlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromqlRequest) ProtoMessage() {}

func (x *PromqlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_greptime_v1_prom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromqlRequest.ProtoReflect.Descriptor instead.
func (*PromqlRequest) Descriptor() ([]byte, []int) {
	return file_greptime_v1_prom_proto_rawDescGZIP(), []int{0}
}

func (x *PromqlRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (m *PromqlRequest) GetPromql() isPromqlRequest_Promql {
	if m != nil {
		return m.Promql
	}
	return nil
}

func (x *PromqlRequest) GetInstantQuery() *PromInstantQuery {
	if x, ok := x.GetPromql().(*PromqlRequest_InstantQuery); ok {
		return x.InstantQuery
	}
	return nil
}

func (x *PromqlRequest) GetRangeQuery() *PromRangeQuery {
	if x, ok := x.GetPromql().(*PromqlRequest_RangeQuery); ok {
		return x.RangeQuery
	}
	return nil
}

type isPromqlRequest_Promql interface {
	isPromqlRequest_Promql()
}

type PromqlRequest_InstantQuery struct {
	InstantQuery *PromInstantQuery `protobuf:"bytes,2,opt,name=instant_query,json=instantQuery,proto3,oneof"`
}

type PromqlRequest_RangeQuery struct {
	RangeQuery *PromRangeQuery `protobuf:"bytes,3,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*PromqlRequest_InstantQuery) isPromqlRequest_Promql() {}

func (*PromqlRequest_RangeQuery) isPromqlRequest_Promql() {}

type PromqlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   []byte          `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"` // absolutely same format as Prometheus in JSON
}

func (x *PromqlResponse) Reset() {
	*x = PromqlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_greptime_v1_prom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromqlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromqlResponse) ProtoMessage() {}

func (x *PromqlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_greptime_v1_prom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromqlResponse.ProtoReflect.Descriptor instead.
func (*PromqlResponse) Descriptor() ([]byte, []int) {
	return file_greptime_v1_prom_proto_rawDescGZIP(), []int{1}
}

func (x *PromqlResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PromqlResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type PromInstantQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Time  string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PromInstantQuery) Reset() {
	*x = PromInstantQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_greptime_v1_prom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromInstantQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromInstantQuery) ProtoMessage() {}

func (x *PromInstantQuery) ProtoReflect() protoreflect.Message {
	mi := &file_greptime_v1_prom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromInstantQuery.ProtoReflect.Descriptor instead.
func (*PromInstantQuery) Descriptor() ([]byte, []int) {
	return file_greptime_v1_prom_proto_rawDescGZIP(), []int{2}
}

func (x *PromInstantQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PromInstantQuery) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type PromRangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Start string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Step  string `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *PromRangeQuery) Reset() {
	*x = PromRangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_greptime_v1_prom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromRangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromRangeQuery) ProtoMessage() {}

func (x *PromRangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_greptime_v1_prom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromRangeQuery.ProtoReflect.Descriptor instead.
func (*PromRangeQuery) Descriptor() ([]byte, []int) {
	return file_greptime_v1_prom_proto_rawDescGZIP(), []int{3}
}

func (x *PromRangeQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PromRangeQuery) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *PromRangeQuery) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *PromRangeQuery) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

var File_greptime_v1_prom_proto protoreflect.FileDescriptor

var file_greptime_v1_prom_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd3, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6d, 0x71, 0x6c, 0x22, 0x59, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x71, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x3c, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x62,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x32, 0x56, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x41, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x71, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x53, 0x0a, 0x0e, 0x69, 0x6f,
	0x2e, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x50, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x2f, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x65, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_greptime_v1_prom_proto_rawDescOnce sync.Once
	file_greptime_v1_prom_proto_rawDescData = file_greptime_v1_prom_proto_rawDesc
)

func file_greptime_v1_prom_proto_rawDescGZIP() []byte {
	file_greptime_v1_prom_proto_rawDescOnce.Do(func() {
		file_greptime_v1_prom_proto_rawDescData = protoimpl.X.CompressGZIP(file_greptime_v1_prom_proto_rawDescData)
	})
	return file_greptime_v1_prom_proto_rawDescData
}

var file_greptime_v1_prom_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_greptime_v1_prom_proto_goTypes = []interface{}{
	(*PromqlRequest)(nil),    // 0: greptime.v1.PromqlRequest
	(*PromqlResponse)(nil),   // 1: greptime.v1.PromqlResponse
	(*PromInstantQuery)(nil), // 2: greptime.v1.PromInstantQuery
	(*PromRangeQuery)(nil),   // 3: greptime.v1.PromRangeQuery
	(*RequestHeader)(nil),    // 4: greptime.v1.RequestHeader
	(*ResponseHeader)(nil),   // 5: greptime.v1.ResponseHeader
}
var file_greptime_v1_prom_proto_depIdxs = []int32{
	4, // 0: greptime.v1.PromqlRequest.header:type_name -> greptime.v1.RequestHeader
	2, // 1: greptime.v1.PromqlRequest.instant_query:type_name -> greptime.v1.PromInstantQuery
	3, // 2: greptime.v1.PromqlRequest.range_query:type_name -> greptime.v1.PromRangeQuery
	5, // 3: greptime.v1.PromqlResponse.header:type_name -> greptime.v1.ResponseHeader
	0, // 4: greptime.v1.PrometheusGateway.Handle:input_type -> greptime.v1.PromqlRequest
	1, // 5: greptime.v1.PrometheusGateway.Handle:output_type -> greptime.v1.PromqlResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_greptime_v1_prom_proto_init() }
func file_greptime_v1_prom_proto_init() {
	if File_greptime_v1_prom_proto != nil {
		return
	}
	file_greptime_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_greptime_v1_prom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromqlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_greptime_v1_prom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromqlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_greptime_v1_prom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromInstantQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_greptime_v1_prom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromRangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_greptime_v1_prom_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PromqlRequest_InstantQuery)(nil),
		(*PromqlRequest_RangeQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_greptime_v1_prom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_greptime_v1_prom_proto_goTypes,
		DependencyIndexes: file_greptime_v1_prom_proto_depIdxs,
		MessageInfos:      file_greptime_v1_prom_proto_msgTypes,
	}.Build()
	File_greptime_v1_prom_proto = out.File
	file_greptime_v1_prom_proto_rawDesc = nil
	file_greptime_v1_prom_proto_goTypes = nil
	file_greptime_v1_prom_proto_depIdxs = nil
}
